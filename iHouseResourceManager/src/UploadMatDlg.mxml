<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="750" height="580" creationComplete="init()">
	
	<fx:Script>
		<![CDATA[				
			import Skins.BudgetRenderer;
			
			import UI.ResourceAlertDialog;
			
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.ProgressBar;
			import mx.core.UIComponent;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.InvokeEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.UIDUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;

			private var TypeGroup:ArrayCollection		= new ArrayCollection();
			private var PutTypeGroup:ArrayCollection	= new ArrayCollection();
			
			private var fileRefs:FileReferenceList  	= new FileReferenceList();  
			private var ImageGroup:ArrayCollection   	= new ArrayCollection();
			private var RenderGroup:ArrayCollection  	= new ArrayCollection();
			public var mypagedata:ArrayCollection = new ArrayCollection();
			public  var m_iHouse:iHouseResourceManager;
			
			private var m_strName:String;
			private var m_strSize:String;
			private var m_strFile:String;   
			private var m_iType:int = 0;		//反射类型 普通：0  高光：1  平光：2  哑光：3
			private var m_iPutType:int = 0;    //放置类型 通用:0  地面：1  墙面：2  顶面：3
			private var m_iJCS:int = 0;		//建材商选择
			
			private var m_iMode:int = 0; 		// 0 3D   1 vrscene  2 缩略图
			private var m_strUUID:String;
			
			//如果有重新上传文件情况，需要更新uuid.为了更新后的数据能正常在渲染端下载
			private var mUploadFile:Boolean = false;
			private var mDeleteFile:Boolean = false;
						
			[Bindable]
			public var RecordGroup:ArrayCollection   =new ArrayCollection();
			
			private function init():void
			{
				fileRefs.addEventListener(Event.SELECT,fileSelectHandler);
				fileRefs.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				fileRefs.addEventListener(Event.COMPLETE, completeHandler); 
				
				//反射类型：普通：0  高光：1  平光：2  哑光：3
				TypeGroup.addItem({label:"普通"}); 
				TypeGroup.addItem({label:"高光"}); 
				TypeGroup.addItem({label:"平光"}); 
				TypeGroup.addItem({label:"哑光"});

				mType.selectedIndex = 0;
				m_iType = 0;
				mJCS.selectedIndex = 0;
				m_iJCS = 0;
				
				//放置类型 通用:0  地面：1  墙面：2  顶面：3
				PutTypeGroup.addItem({label:"通用"});
				PutTypeGroup.addItem({label:"地面"});
				PutTypeGroup.addItem({label:"墙面"});
				PutTypeGroup.addItem({label:"顶面"});
				
				mPutType.selectedIndex = 0;
				m_iPutType = 0;
			}
			
			public function InitDialog():void
			{
				mypagedata.addItem({mParent:this});
				
				mList.dataProvider = mypagedata;
			}
		
			public function HidePriceText():void
			{
				mPriceUnit.visible = false;
				mPrice.visible = false;
				mPriceText.visible = false;
			}
			
			public function OnReset():void
			{
				mName.text  = "";
				mLength.text = "";
				mWidth.text = "";
				mPathText.text = "";
				mPrice.text = "";	
				mNumber.text = "";
				mMaterialName.text = "";
				mIcon.source = null;
				mTextAttribute.text = "";
				RenderGroup.removeAll();
				
				mUploadFile = false;
				mDeleteFile = false;
				
				OnChangeTab(1);
			}
			
			/***
			 * 添加新记录
			 * 
			 */
			public function AddShow(node1Name:String,node2Name:String):void
			{
				this.visible = true;
				mName.enabled = true;
				
				OnReset();
				
				if(node1Name !="" && node1Name !="" && node1Name !="")
				{
					mClass.label = node1Name + "-" + node2Name ;
				}
				else
				{
					mClass.label = "选择分类...";
				}
				
				m_strUUID = UIDUtil.createUID();
				mBtn0.selected = true;
			}
			
			public function OnDeleteFile(strFileName:String):void
			{				
				m_bUploadFile = false;
				mDeleteFile = true;
				
				strFileName = strFileName.split("\\").join("\\\\");
				
				var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("DeleteFileMat");
				m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnDeleteResult);
				m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnDeleteFault);
				op.send("ihouse\\data\\texture\\"+strFileName, strFileName);
			}		
			
			/***
			 * 打开已有记录
			 * 
			 */
			var strMatUUID:String = null;
			public function ModifyShow(strUUID:String):void
			{
				strMatUUID = strUUID;
				mName.enabled = false;
				var strSql:String ="select * from material where uuid ='"+strUUID+"'";
				var op:AbstractOperation = m_iHouse.mDataProcess.mWebService1.getOperation("DoSql");
				m_iHouse.mDataProcess.mWebService1.addEventListener(FaultEvent.FAULT, OnErrorModify);
				m_iHouse.mDataProcess.mWebService1.addEventListener(ResultEvent.RESULT,OnResultModify);
				op.send(strSql,'6E897B0F-1440-7196-96C1-05C879E9399A',m_iHouse.mStrUserID,m_iHouse.mStrAccountType);	
				this.visible = true;
			}
			
			private function OnErrorModify(e:FaultEvent):void
			{
				m_iHouse.mDataProcess.mWebService1.removeEventListener(FaultEvent.FAULT,OnErrorModify);
				m_iHouse.mDataProcess.mWebService1.removeEventListener(ResultEvent.RESULT,OnResultModify);
				m_iHouse.mHelpDialog.show("系统繁忙,请重试.");	 
			}	
			
			public var m_strData:String;
			public function OnResultModify(e:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService1.removeEventListener(FaultEvent.FAULT,  OnErrorModify);
				m_iHouse.mDataProcess.mWebService1.removeEventListener(ResultEvent.RESULT,OnResultModify);
				
				m_strData   = e.result.toString();
	
				var recordArray:Array = m_strData.split("#");
				if( recordArray.length <=1 )
				{
					m_iHouse.mHelpDialog.show("没查到记录");
					this.visible = false;
					return;
				}
				
				var strRecordArray:Array = recordArray[1].split("~");
				
				mName.text 	 = strRecordArray[3];
				mClass.label = strRecordArray[0]+"-"+strRecordArray[1];
				
				var sizArray:Array = strRecordArray[4].split("-");
				mLength.text = sizArray[0]; 
				mWidth.text  = sizArray[1];
				mPrice.text  = strRecordArray[9];
				
				mType.selectedIndex = int(strRecordArray[5]); 	// 类型
				m_iType = int(strRecordArray[5]);
				
				// 供货商
				mJCS.selectedIndex = 0;
				for (var i:int=0; i < RecordGroup.length; i++)
				{
					if (RecordGroup[i]['id'] == int(strRecordArray[16]))
					{
						m_iJCS = RecordGroup[i]['id'];
						mJCS.selectedIndex = i;
						break;
					}
				}
				
				//放置类型
				if(strRecordArray.length > 15)
				{
					mPutType.selectedIndex = int(strRecordArray[15]);
					m_iPutType = int(strRecordArray[15]);
				}
				
				mMaterialName.text = strRecordArray.length >= 15 ? strRecordArray[14]: "";
				
				mTextAttribute.text = (strRecordArray.length >= 14) ? strRecordArray[13]: "";
				
  				for( var i:int = 1;i<recordArray.length; i++ )  
				{
					var strRecordArray:Array = recordArray[i].split("~");
					
					m_strUUID = strRecordArray[8]; // 得到UUID

					if( int(strRecordArray[7]) == 2  && strRecordArray[2] !="e082de32-fb77-46cf-9da2-d72d8909d73a")
					{
						/* var strPathFile:String="/";
						var tmpArray:Array = strRecordArray[2].split("\\");
						for( var k:int =0; k<tmpArray.length; k++ )
							strPathFile += "/"+ tmpArray[k]; */
						
						var strPathFile:String="";
						var tmpArray:Array = strRecordArray[2].split("\\");
						for( var k:int =0; k<tmpArray.length; k++ )
							strPathFile +=  tmpArray[k] + "/";
						
						//去除最后一个/
						strPathFile = strPathFile.substr(0,strPathFile.length-1);
						
						RenderGroup.addItem(
							                 {
											    image:m_iHouse.mDataProcess.webserviceAddr+"ihouse/data/texture/"+strPathFile, 
												name:tmpArray[tmpArray.length-1],
												pathname:strRecordArray[2],
												size:strRecordArray[4], 
												imageSize:strRecordArray[6],
												pwnd:this, 
												progress:null, 
												deletbtn:null,
												bCheck:true,
												bUpload:true
											 }
						                   );
						
						mIcon.source = m_iHouse.mDataProcess.webserviceAddr+"ihouse/data/texture/"+strPathFile;
						
						mPathText.text = m_iHouse.mDataProcess.webserviceAddr+"ihouse/data/texture/"+strPathFile;
					}
					
					if( int(strRecordArray[7]) == 0  && strRecordArray[2] !="e082de32-fb77-46cf-9da2-d72d8909d73a")
					{
						
/* 						var strPathFile:String="/";
						var tmpArray:Array = strRecordArray[2].split("\\");
						for( var k:int =0; k<tmpArray.length; k++ )
							strPathFile += "/"+ tmpArray[k]; */
						
						var strPathFile:String="";
						var tmpArray:Array = strRecordArray[2].split("\\");
						for( var k:int =0; k<tmpArray.length; k++ )
							strPathFile +=  tmpArray[k] + "/";
						
						//去除最后一个/
						strPathFile = strPathFile.substr(0,strPathFile.length-1);
						
						RenderGroup.addItem(
							                 {
												image:m_iHouse.mDataProcess.webserviceAddr+"ihouse/data/texture/"+strPathFile, 
												name:tmpArray[tmpArray.length-1], 
												pathname:strRecordArray[2],
												size:strRecordArray[4], 
												imageSize:strRecordArray[6],
												pwnd:this, 
												progress:null, 
												deletbtn:null,
												bCheck:false,
												bUpload:true
											 }
						                   );	
					}
				}  		
			} 	
			
			private function CheckValue():Boolean
			{
				if( mName.text.length <=0 )
				{
					m_iHouse.mHelpDialog.show("请填写名称.");
					return false;
				}
				
				if(int(mLength.text)<=0)
				{
					m_iHouse.mHelpDialog.show("请填写长.");
					return false;					
				}
				
				if( int(mWidth.text)<=0)
				{
					m_iHouse.mHelpDialog.show("请填写宽.");
					return false;					
				}
				
				if(mClass.label == "选择分类..." )
				{
					m_iHouse.mHelpDialog.show("请选择分类.");
					return false;						
				}
				
				m_strName  = mName.text;
				m_strSize  = mLength.text +"-"+ mWidth.text;

				arrayClass = mClass.label.split("-");
				m_iClass   = 0;
				
				return true;
			}
			
			private function GenerateFloderUUID():String
			{
				var strUUID:String = UIDUtil.createUID();
				var arrayTemp:Array = strUUID.split("-");	// 去掉 "-"
				var strFloder:String ="c";
				for( var k:int =0; k<arrayTemp.length; k++ )
					strFloder += arrayTemp[k];
				
				return strFloder;
			}
			
			/**
			 * 添加三级分类,如果已存在返回分类UUID做为文件夹
			 * 
			 */
			private var m_iClass:int = 0;
			private var arrayClass:Array;
			private var m_strClassUUID0:String;
			private var m_strClassUUID1:String;
			private var m_strFloder:String;
			private var m_strPathFile:String; // 保持到数据库的路径
			private function OnAddClassResult(e:ResultEvent):void
			{
				if(1==m_iClass || 2== m_iClass)
				{
					m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnAddClassResult);
					m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnAddClassFault);
				}
				
				var strFloder:String = GenerateFloderUUID();	
				switch( m_iClass )
				{
					case 0:
					{
						var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("AddClass");
						m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnAddClassResult);
						m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnAddClassFault);
						op.send(arrayClass[0],strFloder);
					}
						break;
					case 1:
					{	
						m_strClassUUID0 = e.result.toString();
						var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("AddClass");
						m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnAddClassResult);
						m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnAddClassFault);
						op.send(arrayClass[1],strFloder);
					}
						break;
					case 2:
					{
						m_strClassUUID1 = e.result.toString();
						m_strFloder = "ihouse\\data\\texture\\"+m_strClassUUID0+"\\"+m_strClassUUID1+"\\"+mName.text+"\\";
						m_strPathFile = m_strClassUUID0+"\\\\"+m_strClassUUID1+"\\\\"+mName.text+"\\\\";	
					}
						break;  
				}
				m_iClass++;
			}
			
			private function OnAddClassFault(e:FaultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnAddClassResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnAddClassFault);
				m_iHouse.mHelpDialog.show("添加分类失败.");	 
			}

			private var m_iFileIsNull:int = 0;
			private function selectFile():void
			{	

				if( CheckValue() == false )
					return;
				OnAddClassResult(null);// 创分类
				
				var fileFiter1:FileFilter=new FileFilter("All Files","*.*");
				fileRefs.browse([fileFiter1]);
				m_iFileIsNull = 0;						

			}
			
			private function CheckName():void
			{
				if( mName.text.length <=0 )
				{
					m_iHouse.mHelpDialog.show("请填写名称.");
					return;
				}	
				
				var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("CheckName");
				m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnResultName);
				op.send(mName.text,0);
			}
			
			private function OnResultName(event:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnResultName);
				var str:String = event.result.toString();
				
				if( str == "1")
					m_iHouse.mHelpDialog.show("名称不唯一,请修改.");
			}				
			
			private function fileSelectHandler(event:Event):void{

				m_iCountFile = 0;
				for each (var f:FileReference in fileRefs.fileList)	//遍历选择的文件
				{        
					f.addEventListener(Event.COMPLETE, completeHandler);
					f.load();
				}            
			}
			   
			private function completeHandler(e:Event):void
			{	
				var f:FileReference = e.target as FileReference;
				f.removeEventListener(Event.COMPLETE,completeHandler);
			
				if( f.data.length == 0 )	// 文件为空时，不上传
				{
					m_iFileIsNull++;
					return;   
				}
				
				for( var i:int = 0; i<RenderGroup.length; i++ )
				{
					if( RenderGroup[i].name == e.target.name )
					{
						m_iHouse.mHelpDialog.show("素材库内有"+e.target.name+"同名文件.");
						return;
					}
				}

				mUploadFile = true;
				
				var loader:Loader=new Loader();
				ImageGroup.addItem({image:e.target.data, name:e.target.name, size:Number(e.target.size/1024).toFixed(2)+"kb", imageSize:"", Obj:loader});	
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE,loader_completeHandler); 
				loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loader_ioErrorHandler); 				
				loader.loadBytes(e.target.data);			
			}
			
			private function ioErrorHandler(e:IOErrorEvent):void
			{
			//	m_iHouse.mHelpDialog.show(e.text);
			}
			
			/***
			 * 不是图片
			 */
			private var m_iCountFile:int = 0;
			private function loader_ioErrorHandler(event:IOErrorEvent):void
			{
				for( var i:int =0; i<ImageGroup.length; i++ )
				{
					if( ImageGroup[i].Obj == event.currentTarget.loader )
					{
						event.currentTarget.loader.removeEventListener(Event.COMPLETE,loader_completeHandler);
						event.currentTarget.loader.removeEventListener(IOErrorEvent.IO_ERROR, loader_ioErrorHandler);

						RenderGroup.addItem(
							                 {
												 image:ImageGroup[i].image, 
												 name:ImageGroup[i].name,
												 pathname:"",
												 size:ImageGroup[i].size,
												 imageSize:"",
												 pwnd:this, 
												 progress:null, 
												 deletbtn:null, 
												 bCheck:false,
												 bUpload:false
											 }
						                   );	
		
						m_iCountFile++;
						if( m_iCountFile == fileRefs.fileList.length-m_iFileIsNull ) // 全部读入后，立刻上传
						{
							OnClickUploadList();
						}						
						return;
					}
				}
			}

			private function loader_completeHandler(event:Event):void
			{
				var bmp:Bitmap=event.currentTarget.content as Bitmap;
				
				var str:String;
				if( bmp)
				{
					str = bmp.bitmapData.width+"X"+bmp.bitmapData.height;
				}
				
				for( var i:int =0; i<ImageGroup.length; i++ )
				{
					if( ImageGroup[i].Obj == event.currentTarget.loader )
					{
						event.currentTarget.loader.removeEventListener(Event.COMPLETE,loader_completeHandler);
						event.currentTarget.loader.removeEventListener(IOErrorEvent.IO_ERROR, loader_ioErrorHandler);

						RenderGroup.addItem({image:ImageGroup[i].image, 
											 name:ImageGroup[i].name,
											 pathname:"",
											 size:ImageGroup[i].size, 
											 imageSize:str,
											 pwnd:this, 
											 progress:null, 
											 deletbtn:null, 
											 bCheck:false,
											 bUpload:false});	
														
						m_iCountFile++;
						if( m_iCountFile == fileRefs.fileList.length-m_iFileIsNull )	// 全部读入后，立刻上传
						{
							OnClickUploadList();
						}						
						return;
					}
				}
			}
						   
			//开始上传文件
			//==================================================================================================
			private var m_iCount:int = 0;
			private function OnClickUploadList():void
			{
				m_iCount = 0;
				OnUploadListFile();
			}
			
			/***
			 *  一个一个上传
			 * 
			 */
			private function OnUploadListFile():void		
			{
				m_bUploadFile = true;
				if( m_iCount < RenderGroup.length )	// 3D模型
				{
					if( RenderGroup[m_iCount].bUpload == false )	// 未上传
					{
						var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("DeleteFileMat");
						m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnDeleteResult);
						m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnDeleteFault);
						op.send(m_strFloder+RenderGroup[m_iCount].name);
					}
					else
					{
						m_iCount++;
						OnUploadListFile();						
					}
				}
								
				// 方便查询记录
	 			if( m_iCount >= RenderGroup.length )
				{
					var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("AddMaterialUUID");
					m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnAddModelResult);
					m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnAddModelFault);	
					op.send(m_strName,m_strSize,"e082de32-fb77-46cf-9da2-d72d8909d73a",
						    arrayClass[0],arrayClass[1],m_iType,Number(mPrice.text),m_strUUID,
					        m_iHouse.mStrAccountType,m_iHouse.mStrCompanyID,m_iHouse.mStrUserID);
				} 
					
				mNumber.text ="当前有"+RenderGroup.length +"条记录";
			} 

			private function OnDeleteFault(e:FaultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnDeleteResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnDeleteFault);
			//	m_iHouse.mHelpDialog.show("上传文件失败.");	 
			}			
			
			private var fileUpload:ByteArray=new ByteArray();	//要传递的数组
			private var BlockNum:int=0;						//传递次数
			private var BlockNumles:int=0;		
			private var blocksize:int=102400;					//每次传递大小, 每次上传100K	
			private var m_bUploadFile:Boolean = true;  
			public function OnDeleteResult(e:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnDeleteResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnDeleteFault);
				
				if( m_bUploadFile == false )		// 是否只是删除
				{
					RenderGroup.removeItemAt(mList3D.selectedIndex);
					return;
				}
				
				var retNum:int=int(e.result.toString());
				if( retNum == 2 || retNum == 0 )// 删除或不存在
				{
					var BlockNum1:Number=(RenderGroup[m_iCount].image.length / blocksize);
					BlockNum	=int(BlockNum1);
					BlockNumles	=int(BlockNum1);
					OnProgress(0,100);
					uploadFile(0,blocksize);
				}								
			}
			
			public function uploadFile(begin:int,end:int):void
			{
				if(m_iCount< RenderGroup.length )	// 上传
				{	
					//var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("WriteFileMat");
					var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("WriteFileMatNew");
					
					m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnResult);
					m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnFault);	
					
					if(RenderGroup[m_iCount].image.length>blocksize)
					{
						fileUpload.writeBytes(RenderGroup[m_iCount].image,begin,end);
					}
					else
					{	
						fileUpload.writeBytes(RenderGroup[m_iCount].image);
					}
					
					op.send(RenderGroup[m_iCount].name,m_strFloder,fileUpload,m_strName,
						    m_strPathFile+RenderGroup[m_iCount].name,m_strSize,arrayClass[0],
							arrayClass[1], m_iType, RenderGroup[m_iCount].size,m_strUUID,
							m_iHouse.mStrAccountType,m_iHouse.mStrCompanyID,m_iHouse.mStrUserID,
					        mMaterialName.text);

					RenderGroup[m_iCount].pathname = m_strPathFile+RenderGroup[m_iCount].name;
				}
			}
			
			private function OnResult(event:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnFault);	
				
				var begin:int=int(event.result.toString());
				BlockNumles-=1;
				fileUpload.clear();			
				
				if(m_iCount< RenderGroup.length )	// 上传
				{					
					OnProgress(begin,RenderGroup[m_iCount].image.length);	//进度条
					
					if(BlockNumles>0)
						uploadFile(begin,blocksize);
					
					if(BlockNumles==0)
						uploadFile(begin,RenderGroup[m_iCount].image.length-begin);
					
					if(BlockNumles==-1)
					{	
						RenderGroup[m_iCount].bUpload = true;
						if( RenderGroup[m_iCount].progress )
						{
							RenderGroup[m_iCount].progress.visible = false;						
							RenderGroup[m_iCount].deletbtn.enabled = true;
							RenderGroup[m_iCount].deletbtn.label = "删除";
						}
						
						//设置缩略图
						mIcon.source = RenderGroup[m_iCount].image;
						OnSetThumbnail(RenderGroup[m_iCount].name,true);
						
/* 						var strThumbnailName:String = mName.text + ".jpg";
						if(strThumbnailName.toLocaleLowerCase() == String(RenderGroup[m_iCount].name).toLocaleLowerCase())
						{
							mIcon.source = RenderGroup[m_iCount].image;
							OnSetThumbnail(strThumbnailName,true);
						} */

						m_iCount++;
						OnUploadListFile();					
					}
				}
			}
			
			private function OnFault(event:FaultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnFault);	
			}			
			
			protected function OnProgress(Loaded:int,Total:int):void   
			{   
				
				var p:ProgressBar;
				if(m_iCount< RenderGroup.length )	// 上传
					p = RenderGroup[m_iCount].progress as ProgressBar;
				
				if(p)
				{
					p.visible = true;
					p.setProgress(Loaded,Total);
				}				
			}  			
					
			var strNewUUID:String = "0";
			public function OnOK():void
			{	
				if(RenderGroup.length == 0)
				{
					m_iHouse.mHelpDialog.show("请选择上传文件");
					return;
				}
	
				if( CheckValue() == true )				
				{
					strNewUUID = "0";
					if(mUploadFile && mDeleteFile)
					{
						strNewUUID = UIDUtil.createUID();
						strNewUUID = strNewUUID.replace(/-/g,"");
					}
					
					var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("ModifyMaterialUUID");
					m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnModifyModelResult);
					m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnModifyModelFault);	
					op.send(m_strName,m_strSize,arrayClass[0],arrayClass[1],m_iType,Number(mPrice.text), 
						    m_strUUID,mTextAttribute.text,mMaterialName.text,m_iPutType,strNewUUID,m_iJCS);
				}
				else
				{
					OnClearData();
				}				
			}
			
			public function OnClearData():void
			{
				RenderGroup.removeAll();
				ImageGroup.removeAll();
				m_iCount = 0;
				mIcon.source  = null;
				this.visible = false;	
				
				//界面刷新 20180403暂时屏蔽
				//m_iHouse.mDataMatView.OnChange(null);
			}

			private function OnList3D(evt:MouseEvent):void
			{
/* 				if( mList3D.selectedIndex == -1 )
					return;
		
				var str:String = RenderGroup[mList3D.selectedIndex].imageSize;
				if( str !="" )
				{
					mIcon.source = RenderGroup[mList3D.selectedIndex].image;
				} */				
			}
			
			public function OnChangeType(e:IndexChangeEvent):void
			{
				m_iType = mType.selectedIndex;
			}
			
			
			public function OnChangeRecord(list:ArrayCollection, key:String):void
			{
				m_iJCS = list[mJCS.selectedIndex][key];
			}
			
			
			public function OnPutChangeType(e:IndexChangeEvent):void
			{
				m_iPutType = mPutType.selectedIndex;
			}
			
			public function OnChange(event:ListEvent):void			
			{
				if( mTree.selectedItem == null )
					return;
				
				// 一级分类
				if( mTree.getParentItem(mTree.selectedItem) == null )				
				{
					return;
				}
				else
				{
					// 二级分类
					if(mTree.getParentItem(mTree.getParentItem(mTree.selectedItem)) == null )
					{
 						var node11:XML=XML(mTree.getParentItem(mTree.selectedItem));
						var node12:XML=XML(mTree.selectedItem);
						mClass.label=node11.@Name+"-"+node12.@Name;	
						return;
					}
				}
			}
			
			/***
			 * 设置缩略图
			 * 
			 */
			public function OnSetThumbnail(strName:String,bUse:Boolean):void
			{
				var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("SetThumbnailMat");
				m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnThumbnailResult);
				m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT,OnThumbnailFault);
				
				if( bUse == true )
					op.send(m_strPathFile+strName,m_strName, 1);
				else
					op.send(m_strPathFile+strName,m_strName, 0);
			}
			
			private function OnThumbnailResult(event:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnThumbnailResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnThumbnailFault);
			//	m_iHouse.mHelpDialog.show("设置缩略图成功.");	 
			}			
			
			private function OnThumbnailFault(e:FaultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnThumbnailResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnThumbnailFault);
			//	m_iHouse.mHelpDialog.show("设置缩略图失败.");	 
			}	
			
			private function OnAddModelResult(event:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnAddModelResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnAddModelFault);	
				//m_iHouse.mHelpDialog.show("所有文件添加完成.");	 
			}			
			
			private function OnAddModelFault(e:FaultEvent):void
			{
				//m_iHouse.mHelpDialog.show("文件添加失败.");	 
			}
			
			private function OnModifyModelResult(event:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnModifyModelResult);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnModifyModelFault);
				
				//更新uuid
				if(mUploadFile && mDeleteFile)
				{
					for(var index:int = 0; index < m_iHouse.mDataMatView.ImageGroup.length; ++index)
					{
						var dataViewItem:Object = m_iHouse.mDataMatView.ImageGroup[index];
						var viewMatUUID:String = dataViewItem.data[8];
						
						if(viewMatUUID == strMatUUID)
						{
							dataViewItem.data[8] = strNewUUID;
							break;
						}
					}
				}
				
				UpdateToRenderServicer();
			}
			
			//通知渲染服务器下载文件
			public function UpdateToRenderServicer():void
			{
				if(RenderGroup.length > 0)					
				{
					/*
					var strMatPathName:String = "";
					
					for(var index:int = 0; index < RenderGroup.length; ++index)
					{
						strMatPathName += RenderGroup[0].pathname;
						
						if(index != RenderGroup.length -1 )
							strMatPathName +=",";
							
					}
					*/
					
					var strMatPath:String = RenderGroup[0].pathname;
					
					//更新数据到渲染服务器，发布给前端
					OnUpdateToRenderServicer(arrayClass[0],arrayClass[1],strMatPath);
				}
			}
			
			public function OnUpdateToRenderServicer(strClass1:String,strClass2:String,strMatPathName:String):void
			{                                  
				var op:AbstractOperation = m_iHouse.mDataProcess.mWebService2.getOperation("NotifyDownloadMaterial");
				m_iHouse.mDataProcess.mWebService2.addEventListener(FaultEvent.FAULT, OnNotifyServicerDownloadFileFault);
				m_iHouse.mDataProcess.mWebService2.addEventListener(ResultEvent.RESULT,OnNotifyServicerDownloadFileResult);
				op.send(strClass1,strClass2,strMatPathName);
			}
			
			private function OnNotifyServicerDownloadFileFault(e:FaultEvent):void
			{
				OnClearData();
				
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,OnNotifyServicerDownloadFileFault);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnNotifyServicerDownloadFileResult);
				m_iHouse.mHelpDialog.show("系统繁忙,请重试");
			}	
			
			public function OnNotifyServicerDownloadFileResult(e:ResultEvent):void
			{
				OnClearData();
				
				m_iHouse.mDataProcess.mWebService2.removeEventListener(FaultEvent.FAULT,  OnNotifyServicerDownloadFileFault);
				m_iHouse.mDataProcess.mWebService2.removeEventListener(ResultEvent.RESULT,OnNotifyServicerDownloadFileResult);				
				var strResult:String = e.result.toString();
				
				//成功，需要发布到前端
				if("1" == strResult)
				{
					m_iHouse.mDataMatView.ExportMatlAll();
					
					//如果有产品信息时，也需要导出
					if("1" == m_iHouse.mDataProcess.mProductInfo)
					{
						m_iHouse.mDataMatView.ExportProductAll();
					}
				}
			}
			//////////////////
			
			private function OnModifyModelFault(e:FaultEvent):void
			{
				//m_iHouse.mHelpDialog.show("文件添加失败.");	 
			}	
			
			//判断是否包含中文
			private function IsContainChinese(fileName:String):Boolean
			{
				var pattern:RegExp=/[\u4e00-\u9fa5]/;
				
				return pattern.test(fileName);
			}
			
			protected function OnNameChange(event:TextOperationEvent):void
			{
				var strName:String = mName.text;
				
				if(0 == strName.length)
					return;
				
				var pattern:RegExp=/^[a-zA-Z]/;
				
				if(pattern.test(strName) && !IsContainChinese(strName) )
				{
					
				}
				else
				{
					mName.text = "";
					m_iHouse.mAlertDialog.show("名称只能由字母及数字组成，开头只能为字母并且名称中不能包含中文字符!");				
				}			
			}
			
			public function OnChangeTab( iIndex:int ):void
			{
				mGroupAttribute.visible = false;
				mList3D.visible = false;
				
				mNumber.visible = false;
				selectFileButton.visible = false;
				
				if( iIndex == 1)
				{
					mList3D.visible = true;
					mNumber.visible = true;
					selectFileButton.visible = true;
					mBtn0.setFocus();
				}
				else if( iIndex == 2 )
				{
					mGroupAttribute.visible = true;
				}
			}
			
			public function OnShowImage():void
			{
			    navigateToURL(new URLRequest(mIcon.source.toString()) );
			}
			
			public function OnClose():void
			{
				visible = false;
			}
						
			/***
			 * 得到建材商列表
			 * 
			 */
			public function GetJcsUserList():void
			{
				var op:AbstractOperation = m_iHouse.mDataProcess.mWebService1.getOperation("GetJcsUserList");
				m_iHouse.mDataProcess.mWebService1.addEventListener(FaultEvent.FAULT, OnErrorJcs);
				m_iHouse.mDataProcess.mWebService1.addEventListener(ResultEvent.RESULT,OnResultJcs);
				op.send(m_iHouse.mStrCompanyID); 
			}
			
			private function OnErrorJcs(e:FaultEvent):void
			{
				m_iHouse.mDataProcess.mWebService1.removeEventListener(FaultEvent.FAULT,OnErrorJcs);
				m_iHouse.mDataProcess.mWebService1.removeEventListener(ResultEvent.RESULT,OnResultJcs);
				m_iHouse.mHelpDialog.show("系统繁忙,请重试.");	 
			}			
			
			public function OnResultJcs(e:ResultEvent):void
			{
				m_iHouse.mDataProcess.mWebService1.removeEventListener(FaultEvent.FAULT,  OnErrorJcs);
				m_iHouse.mDataProcess.mWebService1.removeEventListener(ResultEvent.RESULT,OnResultJcs);
				
				RecordGroup.addItem({id:"-1", lable:"不限"});
				
				var str:String = e.result.toString();
				var strArray:Array = str.split("#");
				
				for( var i:int = 0;i<strArray.length; i++ )  
				{
					var strRecord:String = strArray[i];
					var strRecordArray:Array = strRecord.split("~");
					
					if( strRecordArray[0] == "1" )
						continue;
					
					RecordGroup.addItem({id:strRecordArray[1], 
						lable:strRecordArray[0]
					});
				}
			}
			
		]]>
	</fx:Script>	
	<fx:Declarations>
		<mx:Blur id="blurOn" blurXFrom="0.0" blurXTo="10.0" blurYFrom="0.0" blurYTo="10.0"/>
		<mx:Blur id="blurOut" blurXFrom="10.0" blurXTo="0.0" blurYFrom="10.0" blurYTo="0.0"/>
	</fx:Declarations>
	<fx:Style>
		Tree {
		textAlign: left;
		fontWeight: normal;
		}
	</fx:Style>	
	<s:Rect x="-1000" y="-1000" width="5000" height="5000" alpha="0.5">
		<s:fill>
			<s:SolidColor color="#787878"/>
		</s:fill>
	</s:Rect>
		
	<s:Group left="0" right="0" top="0" bottom="0" >
		<s:Group left="10" right="35" top="20" height="45" mouseDown="this.startDrag();" mouseUp="this.stopDrag()"/>	
		<s:Rect right="20" top="20" left="10" bottom="5" radiusX="5">
			<s:fill>
				<s:SolidColor color="#ffffff"/>
			</s:fill>		
			<s:filters>
				<s:DropShadowFilter angle="0" blurX="8" blurY="8" color="#888888"
									distance="0" hideObject="false" inner="false" knockout="false"
									quality="2" strength="1"/>
			</s:filters> 		
		</s:Rect>	
		<s:Label x="451" y="140" fontFamily="宋体" fontSize="14" text="放置类型:"/>
		<s:DropDownList id="mPutType" x="516" y="136" width="86" height="23"
						change="OnPutChangeType(event)" dataProvider="{PutTypeGroup}" fontFamily="宋体"
						fontSize="15" tabIndex="7"/>
		<s:Label x="291"  y="104" fontFamily="宋体" fontSize="14" text="中文名称:"/>
		<s:TextInput id="mMaterialName" x="356" y="100" width="84"  fontFamily="宋体"
					 fontSize="15"  tabIndex="2" />
		<s:RadioButton id="mBtn0" top="174" left="25" width="120" height="23" label="素材库" fontFamily="宋体" click="OnChangeTab(1);"
					   fontSize="15" fontStyle="normal" fontWeight="normal" skinClass="Skins.CommonRadioButton" selected="true" />
		<s:RadioButton id="mBtn2" top="174" left="147" width="120" height="23" label="属性" fontFamily="宋体" click="OnChangeTab(2);"
					   fontSize="15" fontStyle="normal" fontWeight="normal" skinClass="Skins.CommonRadioButton"/>
		<s:Label x="65"  y="19" fontFamily="宋体" fontSize="14" text="保存的路径:" visible="false"/>
		<s:TextInput id="mPathText" x="151" y="17" width="498" editable="false" tabIndex="7" visible="false"/>
		
		<s:Label x="294" y="140" fontFamily="宋体" fontSize="14" text="渲染效果:"/>
		<s:DropDownList id="mType" x="358" y="136" width="90" height="23"
						change="OnChangeType(event)" dataProvider="{TypeGroup}" fontFamily="宋体"
						fontSize="15" tabIndex="6"/>
		
		<s:Rect right="0" top="0" width="35" height="35" radiusX="45">
			<s:stroke>
				<s:SolidColorStroke color="#ffffff" caps="none" weight="3" joints="miter" miterLimit="4"/>
			</s:stroke>	
			<s:fill>
				<s:SolidColor color="#000000"/>
			</s:fill>
			<s:filters>
				<s:DropShadowFilter angle="0" blurX="4" blurY="4" color="#888888"
									distance="0" hideObject="false" inner="false" knockout="false"
									quality="2" strength="1"/>
			</s:filters> 	
		</s:Rect>
		<s:Label left="20"  top="40"  fontFamily="宋体"  fontSize="36" text="上传贴图文件"/>
		<s:Rect right="33"  left="22" top="80">
			<s:stroke>
				<s:SolidColorStroke color="#dddddd" caps="none" weight="2" joints="miter" miterLimit="1"/>
			</s:stroke>			
		</s:Rect>
		<s:Image right="8" top="10"  source="@Embed('/assets/close.png')" 
				 mouseDownEffect="{blurOn}" mouseUpEffect="{blurOut}"
				 buttonMode="true" click="OnClose();" />		

		<s:Button x="580" bottom="65" width="110" height="23" id="selectFileButton" label="上传本地文件" fontFamily="宋体" 
				  click="selectFile()" skinClass="Skins.CommonButton" />
		<s:Label x="451" y="104" fontFamily="宋体" fontSize="14" text="长:"/>
		<s:Label x="533" y="104" fontFamily="宋体" fontSize="14" text="宽:"/>
		<s:Label x="22"  y="104" fontFamily="宋体" fontSize="14" text="名称(只英文和数字)"/>
		<s:Label x="33"  y="489" fontFamily="宋体" fontSize="14" text="当前记录数:" id="mNumber"/>
		<s:TextInput id="mName" x="154" y="100" width="134" change="OnNameChange(event)" fontFamily="宋体"
					 fontSize="15" restrict="A-Z a-z 0-9\_\-\*\" tabIndex="1"/>
		<s:TextInput id="mLength" x="478" y="100" width="44" fontFamily="宋体" fontSize="15"
					 restrict="0-9" tabIndex="3"/>
		<s:TextInput id="mWidth" x="558" y="100" width="44" fontFamily="宋体" fontSize="15"
					 restrict="0-9" tabIndex="4"/>
		<s:Label x="22" y="140" fontFamily="宋体" fontSize="14" text="分 类:"/>
				
		<s:List id="mList3D" dataProvider="{RenderGroup}" itemRenderer="Skins.BudgetRenderer" 
				click="OnList3D(event);" left="25" top="204" right="35"  bottom="106" verticalScrollPolicy="on" />	
		<s:Group id="mGroupAttribute" left="25" top="202" right="35"  bottom="108" >
			<s:TextArea id="mTextAttribute" left="1" top="1" right="5" bottom="160" fontFamily="宋体" fontSize="14" restrict="^,#~" tabIndex="8"/>
			<s:List id="mList" left="5" top="115" right="5"  bottom="40"  borderVisible="false"
					contentBackgroundColor="#F7F7F7"  
					itemRenderer="Skins.ListItemRender" verticalScrollPolicy="on" horizontalScrollPolicy="off">		
			</s:List>
			<s:Label id="mLabelAttribute" left="1" bottom="4" right="20" color="#ff0000"  fontFamily="宋体" fontSize="14"
					 text="说明：输入属性内容，例如一个瓷砖有品牌、颜色、规格、尺寸,则输入以下内容：马可波罗白色花纹200X300,这里可以根据贴图信息输入任意与贴图相关信息，主要目的方便前端查找。"/>
		</s:Group>
	
		<s:Image id="mIcon" x="614" y="91" width="100" height="100" doubleClickEnabled="true" doubleClick="OnShowImage()"/>	
		<mx:PopUpButton id="mClass" x="69" y="136" width="219" height="23" label="选择分类..."
						fontFamily="宋体" fontSize="15" tabIndex="5">
			<mx:popUp>
				<mx:Tree id="mTree" width="200" height="260" borderVisible="true"
						 change="OnChange(event);" dataProvider="" 
						 fontFamily="宋体" fontSize="15" labelField="@Name" textAlign="left" borderStyle="solid" >						
				</mx:Tree>	
			</mx:popUp>
		</mx:PopUpButton>
				
		<s:Label x="33" bottom="69" fontFamily="宋体" fontSize="14" text="选择建材商:"/>
		<s:DropDownList id="mJCS" x="123" bottom="65" width="111" height="23" labelField="lable"
						change="OnChangeRecord(RecordGroup, 'id')" dataProvider="{RecordGroup}" fontFamily="宋体"
						fontSize="15" tabIndex="7"/>
		
		<s:Label id="mPriceText" x="255" bottom="69" fontFamily="宋体" fontSize="14" text="价 格:" visible="true"/>
		<s:Label id="mPriceUnit" x="414" bottom="69" fontFamily="宋体" fontSize="14" text="元" visible="true"/>
		<s:TextInput id="mPrice" x="306" bottom="65" width="100" fontFamily="宋体" fontSize="15"
					 restrict="0-9." visible="true"/>
		
		<s:Button x="315" y="534" width="120" height="26" label="确定" skinClass="Skins.CommonButton" click="OnOK();"/>
		<s:Button x="345" y="40" width="60" height="22" label="测试唯一" skinClass="Skins.CommonButton" click="CheckName();" visible="false"/>
	</s:Group>	
</s:Group>
