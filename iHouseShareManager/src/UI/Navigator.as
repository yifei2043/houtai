package UI {				import flash.events.Event;	import flash.events.TimerEvent;	import flash.utils.Timer;		import mx.controls.Alert;	import mx.core.UIComponent;
	public class Navigator extends UIComponent {				public static const INIT_COMPLETE:String 	  = "veThumbNavigatorInitComplete";				public  var m_width:int;		public  var m_height:int;		public  var _navArray:Array;		private var m_parent:ImageScroll;					public  var gMain:iHouseShareManager;					[Bindable]		[Embed(source="assets/delete_01.png")]   		public var delTex:Class;						public function Navigator( _witdh:int, _height:int, parent:ImageScroll, root:iHouseShareManager){			_navArray	= [];			m_width		= _witdh;			m_height	= _height;			m_parent    = parent;			gMain		= root;			initializeThumbnails( );					}				public function AddThumbnails():void		{			var navItem:Thumbnail = new Thumbnail(gMain.mImageView.ImageGroup.length-1, 			gMain.mImageView.ImageGroup[gMain.mImageView.ImageGroup.length-1].thumbnailImage, 230, 210, this );						navItem.addEventListener(Thumbnail.EVENT_CLICKED, thumbClickHandler);			addChild(navItem);			_navArray.push(navItem);			UpdatePos();		}		public function DelThumbnails( iIndex:int ):void		{			_navArray[iIndex].removeEventListener(Thumbnail.EVENT_CLICKED, thumbClickHandler);			this.removeChild(_navArray[iIndex]);						_navArray.splice(iIndex,1);			UpdatePos();					}		private function initializeThumbnails( ):void		{			for(var i:int = 0; i<gMain.mImageView.ImageGroup.length; i++ )			{								var navItem:Thumbnail = new Thumbnail(i, gMain.mImageView.ImageGroup[i].thumbnailImage, 230, 210, this );				navItem.addEventListener(Thumbnail.EVENT_CLICKED, thumbClickHandler);				navItem.addEventListener(Thumbnail.EVENT_SELECTED, thumbSelectedHandler);				addChild(navItem);				_navArray.push(navItem);						}			UpdatePos();			dispatchEvent( new Event( Navigator.INIT_COMPLETE, true ) );			}				private function thumbSelectedHandler(e:Event):void		{			gMain.mImageView.ImageGroup[e.currentTarget._ref].selected = e.currentTarget.m_cCheck.checked;			gMain.mImageView.ImageGroup[e.currentTarget._ref].mWidth   = e.currentTarget.m_widthImage;			gMain.mImageView.ImageGroup[e.currentTarget._ref].mHeight  = e.currentTarget.m_heightImage;		}				private function thumbClickHandler(e:Event):void		{				if( e.currentTarget.m_widthImage == 1536 && e.currentTarget.m_heightImage == 2048 )	//  360度全景			{			//	gMain.mImageView.GetImage360(gMain.mImageView.ImageGroup[e.currentTarget._ref].thumbnailImage);			}			else	// 效果图			{/*				gMain.mShowRendering.mImage.source = e.currentTarget._source;				gMain.mShowRendering.m_iIndex = 0;								gMain.mShowRendering.ShowDialog(800,600,true);*/						}					//	gMain.mSceneImageListDialog.m_selectIndex = e.currentTarget._ref;					}				public var m_iIndex:int; 		public function UpdatePos():void		{				m_iIndex = int((m_width+50)/240);						var iCount:int = 0;			var iHeight:int = 0;			for (var i:int = 0; i<_navArray.length; i++) 			{				if( iCount >=m_iIndex )				{					iCount = 0;					iHeight +=230;									}				_navArray[i]._ref = i;				_navArray[i].x = iCount*240;				_navArray[i].y = iHeight;								iCount++;			}							m_parent.slideContainer.height = iHeight+230;		}				public function get navArray():Array { return _navArray; }			}	}